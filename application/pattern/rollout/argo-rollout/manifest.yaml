# Install Argo Rollout CLI
# curl -LO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
# chmod +x kubectl-argo-rollouts-linux-amd64
# sudo mv ./kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts
# kubectl argo rollouts version

# Install Argo Rollout on K8s
# kubectl apply -n argo-rollouts -f https://raw.githubusercontent.com/argoproj/argo-rollouts/stable/manifests/install.yaml

# How to Rollout
# Rollout per step: kubectl argo rollouts promote exercise-app-canary -n exercise
# Rollout full: kubectl argo rollouts promote --full exercise-app-canary -n exercise

# kubectl -n exercise apply -f manifest.yaml

# More docs: https://argoproj.github.io/rollouts/
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: exercise-app-canary
  labels:
    app: exercise-app-canary
spec:
  replicas: 4
  strategy:
    canary:
      steps:
        - setWeight: 25
        - pause: {}
        - setWeight: 50
        - pause: {}
        - setWeight: 75
        - pause: {}
        # 100 percent
  selector:
    matchLabels:
      app: exercise-app-canary
  template:
    metadata:
      labels:
        app: exercise-app-canary
    spec:
      containers:
        - name: exercise-app-canary
          image: glendmaatita/exercise-app:v1.0.0
          imagePullPolicy: Always
          resources:
            requests:
              memory: 20Mi
              cpu: 20m
            limits:
              memory: 70Mi
              cpu: 100m
      restartPolicy: Always

---

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: exercise-app-canary
spec:
  scaleTargetRef:
    apiVersion: argoproj.io/v1alpha1
    kind: Rollout
    name: exercise-app-canary
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80